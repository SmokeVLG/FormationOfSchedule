<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FS_UsersGroup" targetNamespace="http://tempuri.org/FS_UsersGroup.xsd" xmlns:mstns="http://tempuri.org/FS_UsersGroup.xsd" xmlns="http://tempuri.org/FS_UsersGroup.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FormationOfSchedule" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FormationOfSchedule (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FormationOfSchedule.Properties.Settings.GlobalReference.Default.FormationOfSchedule" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersGroupTableAdapter" GeneratorDataComponentClassName="UsersGroupTableAdapter" Name="UsersGroup" UserDataComponentName="UsersGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FormationOfSchedule (Settings)" DbObjectName="FormationOfSchedule.dbo.UsersGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UsersGroup] WHERE (([IdGroup] = @Original_IdGroup) AND ((@IsNull_UsersGroup = 1 AND [UsersGroup] IS NULL) OR ([UsersGroup] = @Original_UsersGroup)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UsersGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UsersGroup" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UsersGroup] ([UsersGroup]) VALUES (@UsersGroup);
SELECT IdGroup, UsersGroup FROM UsersGroup WHERE (IdGroup = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UsersGroup" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdGroup, UsersGroup FROM dbo.UsersGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UsersGroup] SET [UsersGroup] = @UsersGroup WHERE (([IdGroup] = @Original_IdGroup) AND ((@IsNull_UsersGroup = 1 AND [UsersGroup] IS NULL) OR ([UsersGroup] = @Original_UsersGroup)));
SELECT IdGroup, UsersGroup FROM UsersGroup WHERE (IdGroup = @IdGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UsersGroup" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UsersGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UsersGroup" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UsersGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdGroup" ColumnName="IdGroup" DataSourceName="FormationOfSchedule.dbo.UsersGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdGroup" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdGroup" DataSetColumn="IdGroup" />
              <Mapping SourceColumn="UsersGroup" DataSetColumn="UsersGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FS_UsersGroup" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FS_UsersGroup" msprop:Generator_UserDSName="FS_UsersGroup">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="UsersGroup" msprop:Generator_TableClassName="UsersGroupDataTable" msprop:Generator_TableVarName="tableUsersGroup" msprop:Generator_TablePropName="UsersGroup" msprop:Generator_RowDeletingName="UsersGroupRowDeleting" msprop:Generator_UserTableName="UsersGroup" msprop:Generator_RowChangingName="UsersGroupRowChanging" msprop:Generator_RowEvHandlerName="UsersGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersGroupRowDeleted" msprop:Generator_RowEvArgName="UsersGroupRowChangeEvent" msprop:Generator_RowChangedName="UsersGroupRowChanged" msprop:Generator_RowClassName="UsersGroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdGroup" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIdGroup" msprop:Generator_ColumnPropNameInRow="IdGroup" msprop:Generator_ColumnPropNameInTable="IdGroupColumn" msprop:Generator_UserColumnName="IdGroup" type="xs:int" />
              <xs:element name="UsersGroup" msprop:Generator_ColumnVarNameInTable="columnUsersGroup" msprop:Generator_ColumnPropNameInRow="UsersGroup" msprop:Generator_ColumnPropNameInTable="UsersGroupColumn" msprop:Generator_UserColumnName="UsersGroup" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UsersGroup" />
      <xs:field xpath="mstns:IdGroup" />
    </xs:unique>
  </xs:element>
</xs:schema>